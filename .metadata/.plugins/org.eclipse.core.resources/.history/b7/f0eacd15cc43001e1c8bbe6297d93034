package bank.balance.entity;

import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.OneToMany;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
@Entity
@Data
public class Bank {
	    @Id
	    @GeneratedValue(strategy = GenerationType.IDENTITY)
		private Long bankId;
	    
		private Long clientId;
		private String bankName;
		private String bankAddress;
		private String bankEmail;
		// @OneToMany(cascade = CascadeType.ALL ,orphanRemoval = true)
		//	private Set<Client>clients = new HashSet<>();
		@ManyToMany(cascade = CascadeType.PERSIST)
		@JoinTable(name = "bank_account", joinColumns = @JoinColumn(name = "bank_id"), inverseJoinColumns = @JoinColumn(name = "account_id"))
		
		@EqualsAndHashCode.Exclude
		@ToString.Exclude
		private Set<Bank>Banks = new HashSet<>();
		@OneToMany(mappedBy = "account", cascade = CascadeType.ALL, orphanRemoval = true)
		@EqualsAndHashCode.Exclude
		@ToString.Exclude
		private Set<Account>accounts = new HashSet<>();
	}
		




  